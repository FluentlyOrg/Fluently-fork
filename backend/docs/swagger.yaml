basePath: /api/v1
definitions:
  schemas.CreateLearnedWordRequest:
    properties:
      cnt_reviewed:
        type: integer
      confidence_score:
        type: integer
      last_reviewed:
        type: string
      learned_at:
        type: string
      user_id:
        type: string
      word_id:
        type: string
    required:
    - user_id
    - word_id
    type: object
  schemas.CreatePreferenceRequest:
    properties:
      avata_image:
        description: Base64
        items:
          type: integer
        type: array
      cefr_level:
        type: number
      fact_everyday:
        type: boolean
      goal:
        type: string
      notification_at:
        type: string
      notifications:
        type: boolean
      subscribed:
        type: boolean
      words_per_day:
        type: integer
    required:
    - cefr_level
    type: object
  schemas.CreateSentenceRequest:
    properties:
      sentence:
        type: string
      translation:
        type: string
      word_id:
        type: string
    required:
    - sentence
    - word_id
    type: object
  schemas.CreateUserRequest:
    properties:
      email:
        type: string
      google_id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      password_hash:
        type: string
      pref_id:
        type: string
      provider:
        type: string
      role:
        type: string
    required:
    - name
    type: object
  schemas.CreateWordRequest:
    properties:
      context:
        type: string
      part_of_speech:
        type: string
      translation:
        type: string
      word:
        type: string
    required:
    - part_of_speech
    - word
    type: object
  schemas.ErrorResponse:
    properties:
      message:
        example: invalid request
        type: string
    type: object
  schemas.JwtResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        example: 86400
        type: integer
      refresh_token:
        example: xYzAbCdEf...
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  schemas.LearnedWordResponse:
    properties:
      cnt_reviewed:
        type: integer
      confidence_score:
        type: integer
      last_reviewed:
        type: string
      learned_at:
        type: string
      user_id:
        type: string
      word_id:
        type: string
    type: object
  schemas.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  schemas.PreferenceResponse:
    properties:
      avatar_image:
        items:
          type: integer
        type: array
      cefr_level:
        type: number
      fact_everyday:
        type: boolean
      goal:
        type: string
      id:
        type: string
      notification_at:
        type: string
      notifications:
        type: boolean
      subscribed:
        type: boolean
      words_per_day:
        type: integer
    type: object
  schemas.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  schemas.SentenceResponse:
    properties:
      id:
        type: string
      sentence:
        type: string
      translation:
        type: string
      word_id:
        type: string
    type: object
  schemas.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      pref_id:
        type: string
      role:
        type: string
    type: object
  schemas.WordResponse:
    properties:
      context:
        type: string
      id:
        type: string
      part_of_speech:
        type: string
      translation:
        type: string
      word:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: Woolfer0097@yandex.ru
    name: Danila Kochegarov
    url: http://fluently-app.ru
  description: Backend API for Fluently
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://fluently-app.ru/terms/
  title: Fluently API
  version: "1.0"
paths:
  /auth/google:
    get:
      description: Initiates Google OAuth 2.0 authorization code flow
      produces:
      - application/json
      responses:
        "302":
          description: Redirect
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Redirects to Google OAuth consent screen
      tags:
      - auth
    post:
      consumes:
      - application/json
      description: Authenticates with Google using the authorization code flow
      parameters:
      - description: Authorization code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JwtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Authenticates with Google
      tags:
      - auth
  /auth/google/callback:
    get:
      description: Exchanges authorization code for tokens and signs user in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JwtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Handles Google OAuth callback
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns JWT
      parameters:
      - description: Email & Password
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/schemas.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JwtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Login with email & password
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Rotates refresh token and returns new access and refresh tokens
      parameters:
      - description: Refresh Token
        in: body
        name: refreshToken
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.JwtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a user, hashes password, returns JWT
      parameters:
      - description: Registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.JwtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Register with email & password
      tags:
      - auth
  /sentences/:
    post:
      consumes:
      - application/json
      description: Adds a new sentence for a word
      parameters:
      - description: Sentence data
        in: body
        name: sentence
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateSentenceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Create a sentence
      tags:
      - sentences
  /sentences/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a sentence by ID
      parameters:
      - description: Sentence ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Delete a sentence
      tags:
      - sentences
    put:
      consumes:
      - application/json
      description: Updates an existing sentence by ID
      parameters:
      - description: Sentence ID
        in: path
        name: id
        required: true
        type: string
      - description: Sentence data
        in: body
        name: sentence
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateSentenceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Update a sentence
      tags:
      - sentences
  /users/:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Returns a user by their unique identifier
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates user data by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Update a user
      tags:
      - users
  /users/{id}/preferences/:
    get:
      consumes:
      - application/json
      description: Возвращает предпочтения пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.PreferenceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Получить предпочтения пользователя
      tags:
      - preferences
    post:
      consumes:
      - application/json
      description: Создаёт предпочтения пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Данные предпочтений
        in: body
        name: preference
        required: true
        schema:
          $ref: '#/definitions/schemas.CreatePreferenceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.PreferenceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Создать предпочтения пользователя
      tags:
      - preferences
    put:
      consumes:
      - application/json
      description: Обновляет предпочтения пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Данные предпочтений
        in: body
        name: preference
        required: true
        schema:
          $ref: '#/definitions/schemas.CreatePreferenceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.PreferenceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Обновить предпочтения пользователя
      tags:
      - preferences
  /users/{user_id}/learned-words/:
    get:
      consumes:
      - application/json
      description: Returns all learned words for a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.LearnedWordResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get user's learned words
      tags:
      - learned-words
    post:
      consumes:
      - application/json
      description: Adds a new learned word for a user
      parameters:
      - description: Learned word data
        in: body
        name: learned_word
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateLearnedWordRequest'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Add a learned word
      tags:
      - learned-words
  /users/{user_id}/learned-words/{word_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user's learned word by word ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Word ID
        in: path
        name: word_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Delete a learned word
      tags:
      - learned-words
    get:
      consumes:
      - application/json
      description: Returns a learned word by user ID and word ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Word ID
        in: path
        name: word_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.LearnedWordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get user's learned word by word ID
      tags:
      - learned-words
    put:
      consumes:
      - application/json
      description: Updates a user's learned word by word ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Word ID
        in: path
        name: word_id
        required: true
        type: string
      - description: Learned word data
        in: body
        name: learned_word
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateLearnedWordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Update a learned word
      tags:
      - learned-words
  /words/:
    get:
      consumes:
      - application/json
      description: Returns all words
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.WordResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get list of words
      tags:
      - words
    post:
      consumes:
      - application/json
      description: Adds a new word
      parameters:
      - description: Word data
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateWordRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.WordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Create a new word
      tags:
      - words
  /words/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a word by ID
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Delete a word
      tags:
      - words
    get:
      consumes:
      - application/json
      description: Returns a word by its unique identifier
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.WordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get word by ID
      tags:
      - words
    put:
      consumes:
      - application/json
      description: Updates an existing word by ID
      parameters:
      - description: Word ID
        in: path
        name: id
        required: true
        type: string
      - description: Word data
        in: body
        name: word
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateWordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.WordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Update a word
      tags:
      - words
  /words/{word_id}/sentences:
    get:
      consumes:
      - application/json
      description: Returns all sentences for the specified word
      parameters:
      - description: Word ID
        in: path
        name: word_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schemas.SentenceResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get sentences for a word
      tags:
      - sentences
swagger: "2.0"
